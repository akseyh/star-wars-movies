{"version":3,"sources":["img/star-wars-logo.png","components/Header.js","pages/Home.js","pages/Movies.js","pages/Peoples.js","pages/Planets.js","pages/Starships.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Navbar","bg","variant","react_router_dom","to","className","Image","src","logo","width","Collapse","id","Nav","Home","Jumbotron","href","Button","Movies","state","movies","axios","require","get","res","this","setState","prevState","concat","Object","toConsumableArray","data","results","style","display","flexDirection","flexWrap","justifyContent","length","map","movie","index","Card","text","key","margin","height","border","onClick","newDisplay","document","getElementsByClassName","title","Body","Text","opening_crawl","color","director","producer","Spinner","animation","React","Component","Peoples","peoples","page","_this2","people","name","birth_year","eye_color","hair_color","skin_color","Planets","planets","planet","rotation_period","orbital_period","diameter","climate","gravity","Starships","starships","starship","model","passengers","cargo_capacity","consumables","MGLT","App","Container","Col","components_Header","react_router","component","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a50fff51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-wars-logo.1b4306c0.png\";","import React from 'react';\r\nimport { Navbar, Nav, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/star-wars-logo.png'\r\n\r\n\r\nfunction Header () {\r\n    return(\r\n        <Navbar bg=\"dark\" variant=\"dark\" >\r\n                <Link to={'/'} className=\"navbar-brand\"> \r\n                    <Image src={logo} width=\"100px\"/>\r\n                </ Link>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\" id=\"navbarToggleExternalContent\">\r\n                        <Link to={'/movies'} className=\"nav-link\"> Movies </ Link>\r\n                        <Link to={'/peoples'} className=\"nav-link\"> Peoples </ Link>\r\n                        <Link to={'/planets'} className=\"nav-link\"> Planets </ Link>\r\n                        <Link to={'/starships'} className=\"nav-link\"> Starships </ Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction Home () {\r\n    return(\r\n        <Jumbotron>\r\n            <h1>Welcome To Star Wars Movies</h1>\r\n            <p>\r\n            Star Wars is an American epic space-opera media franchise created by George Lucas. \r\n            The franchise began with the eponymous 1977 film and quickly became a worldwide pop-culture phenomenon.\r\n\r\n            The first film, later subtitled Episode IV â€“ A New Hope, was followed by the sequels Episode V â€“ \r\n            The Empire Strikes Back (1980) and Episode VI â€“ Return of the Jedi (1983), forming what is collectively \r\n            referred to as the original trilogy. A prequel trilogy was later released, consisting of Episode I â€“ \r\n            The Phantom Menace (1999), Episode II â€“ Attack of the Clones (2002) and Episode III â€“ \r\n            Revenge of the Sith (2005). Finally, a sequel trilogy began with Episode VII â€“ The Force Awakens (2015), \r\n            continued with Episode VIII â€“ The Last Jedi (2017), and will conclude with Episode IX â€“ \r\n            The Rise of Skywalker (2019). The first eight films were nominated for Academy Awards \r\n            (with wins going to the first two released) and were commercially successful. Together with the \r\n            theatrical anthology films Rogue One: A Star Wars Story (2016) and Solo: A Star Wars Story (2018), \r\n            the films combined box office revenue equates to over US$9 billion, and is currently the \r\n            second-highest-grossing film franchise.\r\n            </p>\r\n            <p>\r\n                <a href=\"https://en.wikipedia.org/wiki/Star_Wars\"><Button variant=\"primary\" >Learn more</Button></a>\r\n            </p>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Spinner, Card } from 'react-bootstrap';\r\n\r\nclass Movies extends React.Component {\r\n    state = {\r\n        movies: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        const res = await axios.get('https://swapi.co/api/films/?format=json');\r\n        this.setState(prevState => ({ \r\n            movies: [...prevState.movies, ...res.data.results] \r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { movies } = this.state;\r\n        return (\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    flexWrap: \"wrap\",\r\n                    justifyContent: \"center\" }}>\r\n\r\n                    {movies.length \r\n                    ? movies.map((movie, index) =>\r\n                    <Card  \r\n                    bg=\"dark\"\r\n                    text=\"white\" \r\n                    key={index}\r\n                    style={{ \r\n                        margin: \"2px\",\r\n                        width: \"100%\",\r\n                        height: \"auto\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                    >\r\n                        <Card.Header \r\n                            onClick={() => {\r\n                                let isDivVisible = document.getElementsByClassName('cardDetail')[{index}.index].style.display === \"none\" ? 1 : 0;\r\n                                let newDisplay = isDivVisible ? \"block\" : \"none\" \r\n                                document.getElementsByClassName('cardDetail')[{index}.index].style.display = newDisplay;\r\n                            }}\r\n                        > \r\n                            {movie.title} \r\n                        </Card.Header>\r\n                        <Card.Body className=\"cardDetail\" style={{display: \"none\"}}>\r\n                            <Card.Text>{movie.opening_crawl}</Card.Text>\r\n                            <Card.Text>\r\n                                <span style={{color: \"#F5D63C\"}}>Director:</span> {movie.director},\r\n                                <span style={{color: \"#F5D63C\"}}> Producer:</span> {movie.producer}\r\n                            </Card.Text>\r\n                            \r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                    )\r\n                    : <Spinner animation=\"grow\"/>}\r\n                </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\nimport { Spinner, Card } from 'react-bootstrap';\r\n\r\nclass Peoples extends React.Component {\r\n    state = {\r\n        peoples: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        // for all api page\r\n        for(let page=1; page<10; page++){\r\n            const res = await axios.get(\"https://swapi.co/api/people/?page=\" + page);\r\n            this.setState(prevState => ({ \r\n                peoples: [...prevState.peoples, ...res.data.results] \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { peoples } = this.state;\r\n        return (\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\" }}>\r\n\r\n                { peoples.length ? peoples.map((people, index) => \r\n                    <Card  \r\n                    bg=\"dark\"\r\n                    text=\"white\" \r\n                    key={index}\r\n                    style={{ \r\n                        margin: \"2px\",\r\n                        width: \"100%\",\r\n                        height: \"auto\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                    >\r\n                        <Card.Header\r\n                        onClick={() => {\r\n                            let isDivVisible = document.getElementsByClassName('cardDetail')[{index}.index].style.display === \"none\" ? 1 : 0;\r\n                            let newDisplay = isDivVisible ? \"block\" : \"none\" \r\n                            document.getElementsByClassName('cardDetail')[{index}.index].style.display = newDisplay;\r\n                        }} > \r\n                            {people.name}\r\n                        </Card.Header>\r\n                        <Card.Body className=\"cardDetail\" style={{display: \"none\"}}>\r\n                            <Card.Text>\r\n                                <span style={{color: \"#F5D63C\"}}>Height:</span> {people.height},\r\n                                <span style={{color: \"#F5D63C\"}}> Birth Year:</span> {people.birth_year}, \r\n                                <span style={{color: \"#F5D63C\"}}> Eye Color:</span> {people.eye_color}, \r\n                                <span style={{color: \"#F5D63C\"}}> Hair Color</span> {people.hair_color}, \r\n                                <span style={{color: \"#F5D63C\"}}> Skin Color:</span> {people.skin_color}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) \r\n                    : <Spinner animation=\"grow\"\r\n                />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Peoples;","import React from 'react';\r\nimport { Spinner, Card } from 'react-bootstrap';\r\n\r\nclass Planets extends React.Component {\r\n    state = {\r\n        planets: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        // for all api page\r\n        for(let page=1; page<8; page++){\r\n            const res = await axios.get(\"https://swapi.co/api/planets/?page=\" + page);\r\n            this.setState(prevState => ({ \r\n                //api format is res.data.results\r\n                planets: [...prevState.planets, ...res.data.results] \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { planets } = this.state;\r\n        return (\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                {planets.length ? planets.map((planet, index) => \r\n                    <Card  \r\n                    bg=\"dark\"\r\n                    text=\"white\" \r\n                    key={index}\r\n                    style={{ \r\n                        margin: \"2px\",\r\n                        width: \"100%\",\r\n                        height: \"auto\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                    >\r\n                        <Card.Header\r\n                        onClick={() => {\r\n                            let isDivVisible = document.getElementsByClassName('cardDetail')[{index}.index].style.display === \"none\" ? 1 : 0;\r\n                            let newDisplay = isDivVisible ? \"block\" : \"none\" \r\n                            document.getElementsByClassName('cardDetail')[{index}.index].style.display = newDisplay;\r\n                        }} >\r\n                            {planet.name} </Card.Header>\r\n                        <Card.Body className=\"cardDetail\" style={{display: \"none\"}}>\r\n                            <Card.Text>\r\n                                <span style={{color: \"#F5D63C\"}}>Rotation Period:</span> {planet.rotation_period}, \r\n                                <span style={{color: \"#F5D63C\"}}> Orbital Period:</span> {planet.orbital_period}, \r\n                                <span style={{color: \"#F5D63C\"}}> Diameter:</span> {planet.diameter}, \r\n                                <span style={{color: \"#F5D63C\"}}> Climate:</span> {planet.climate}, \r\n                                <span style={{color: \"#F5D63C\"}}> Gravity:</span> {planet.gravity},\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) \r\n                : <Spinner animation=\"grow\"/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { Spinner, Card } from 'react-bootstrap';\r\n\r\nclass Starships extends React.Component {\r\n    state = {\r\n        starships: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        // for all api page\r\n        for(let page=1; page<5; page++){\r\n            const res = await axios.get(\"https://swapi.co/api/starships/?page=\" + page);\r\n            this.setState(prevState => ({ \r\n                //api format is res.data.results\r\n                starships: [...prevState.starships, ...res.data.results] \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { starships } = this.state;\r\n        return (\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                {starships.length ? starships.map((starship, index) => \r\n                    <Card  \r\n                    bg=\"dark\"\r\n                    text=\"white\" \r\n                    key={index}\r\n                    style={{ \r\n                        margin: \"2px\",\r\n                        width: \"100%\",\r\n                        height: \"auto\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                    onClick={() => {\r\n                        let isDivVisible = document.getElementsByClassName('cardDetail')[{index}.index].style.display === \"none\" ? 1 : 0;\r\n                        let newDisplay = isDivVisible ? \"block\" : \"none\" \r\n                        document.getElementsByClassName('cardDetail')[{index}.index].style.display = newDisplay;\r\n                    }\r\n                    }\r\n                    >\r\n                        <Card.Header> {starship.name} </Card.Header>\r\n                        <Card.Body className=\"cardDetail\" style={{display: \"none\"}}>\r\n                            <Card.Text>\r\n                                <span style={{color: \"#F5D63C\"}}>Model:</span> {starship.model}, \r\n                                <span style={{color: \"#F5D63C\"}}> Passengers:</span> {starship.passengers}, \r\n                                <span style={{color: \"#F5D63C\"}}> Cargo Capacity:</span> {starship.cargo_capacity}, \r\n                                <span style={{color: \"#F5D63C\"}}> Length:</span> {starship.length}, \r\n                                <span style={{color: \"#F5D63C\"}}> Consumables:</span> {starship.consumables}, \r\n                                <span style={{color: \"#F5D63C\"}}> MGLT:</span> {starship.MGLT}, \r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) \r\n                : <Spinner animation=\"grow\"/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Starships;","import React  from 'react';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport { Container, Col } from 'react-bootstrap';\r\n\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Movies from './pages/Movies';\r\nimport Peoples from './pages/Peoples';\r\nimport Planets from './pages/Planets';\r\nimport Starships from './pages/Starships';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <HashRouter>\r\n                    <Col>\r\n                        <Header />\r\n                    </Col>\r\n                    <Col>\r\n                        <Route component={Home} exact path={\"/\"} />\r\n                        <Route component={Movies} path={\"/movies\"} />\r\n                        <Route component={Peoples} path={\"/peoples\"} />                                    \r\n                        <Route component={Planets} path={\"/planets\"} />                          \r\n                        <Route component={Starships} path={\"/starships\"} />                    \r\n                    </Col>\r\n                </HashRouter>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}