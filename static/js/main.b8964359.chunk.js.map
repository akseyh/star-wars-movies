{"version":3,"sources":["img/star-wars-logo.png","components/Header.js","pages/Home.js","components/MovieItem.js","pages/Movies.js","pages/MovieDetails.js","components/PeopleItem.js","pages/Peoples.js","components/PlanetItem.js","pages/Planets.js","components/StarshipItem.js","pages/Starships.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Navbar","bg","variant","react_router_dom","to","className","Image","src","logo","width","Collapse","id","Nav","Home","MovieItem","data","this","props","episode_id","Card","text","style","margin","height","float","Body","Title","title","React","Component","Movies","state","movies","axios","require","get","res","setState","prevState","concat","Object","toConsumableArray","results","display","flexWrap","justifyContent","length","map","movie","index","components_MovieItem","key","Spinner","animation","MovieDetails","1","2","3","4","5","6","7","episodeId","match","params","_this$state$movie","director","opening_crawl","marginTop","PeopleItem","name","Peoples","peoples","page","_this2","people","components_PeopleItem","PlanetItem","Planets","planets","planet","components_PlanetItem","StarshipItem","Starships","starships","starship","components_StarshipItem","App","Container","Col","components_Header","react_router","component","exact","path","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8964359.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-wars-logo.1b4306c0.png\";","import React from 'react';\r\nimport { Navbar, Nav, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/star-wars-logo.png'\r\n\r\n\r\nfunction Header () {\r\n    return(\r\n        <Navbar bg=\"dark\" variant=\"dark\" >\r\n                <Link to={'/'} className=\"navbar-brand\"> \r\n                    <Image src={logo} width=\"100px\"/>\r\n                </ Link>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\" id=\"navbarToggleExternalContent\">\r\n                        <Link to={'/movies'} className=\"nav-link\"> Movies </ Link>\r\n                        <Link to={'/peoples'} className=\"nav-link\"> Peoples </ Link>\r\n                        <Link to={'/planets'} className=\"nav-link\"> Planets </ Link>\r\n                        <Link to={'/starships'} className=\"nav-link\"> Starships </ Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Home () {\r\n    return(\r\n        <div>\r\n            HomePage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MovieItem extends React.Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        return(\r\n            <Link to={'/movie/' + data.episode_id}>\r\n                <Card  \r\n                    bg=\"dark\"\r\n                    text=\"white\" \r\n                    style={{margin: \"5px\", width: \"10rem\", height: \"10rem\", float: \"left\"}}\r\n                >\r\n                    <Card.Body>\r\n                    <Card.Title>{data.title}</Card.Title>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport MovieItem from '../components/MovieItem';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nclass Movies extends React.Component {\r\n    state = {\r\n        movies: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        const res = await axios.get('https://swapi.co/api/films/?format=json');\r\n        this.setState(prevState => ({ \r\n            movies: [...prevState.movies, ...res.data.results] \r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { movies } = this.state;\r\n        return (\r\n                <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                    {movies.length \r\n                    ? movies.map((movie, index) =>\r\n                        <MovieItem\r\n                            key={index} \r\n                            data={movie}\r\n                        />)\r\n                    : <Spinner animation=\"grow\"/>}\r\n                </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\n\r\nclass MovieDetails extends React.Component {\r\n    state = {\r\n        movie: {},\r\n        id: {\r\n            1:  4,\r\n            2:  5,\r\n            3:  6,\r\n            4:  1,\r\n            5:  2,\r\n            6:  3,\r\n            7:  7\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        const episodeId = this.props.match.params.id;\r\n        const id = this.state.id[episodeId]\r\n        const res = await axios.get('https://swapi.co/api/films/' + id + '?format=json')\r\n        this.setState({ \r\n            movie: res.data\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const { title, director, opening_crawl } = this.state.movie;\r\n        return (\r\n            <div style={{marginTop: \"10px\"}}>\r\n                <h3>{title}</h3>\r\n                <h4>{director}</h4>\r\n                <h6>{opening_crawl}</h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDetails;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\n\r\nclass PeopleItem extends React.Component {\r\n    render() {\r\n        const {name} = this.props;\r\n        return(\r\n            <Card  \r\n                bg=\"dark\"\r\n                text=\"white\" \r\n                style={{margin: \"5px\", width: \"10rem\", height: \"10rem\", float: \"left\"}}\r\n            >\r\n                <Card.Body>\r\n                <Card.Title>{name}</Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeopleItem;","import React from 'react';\r\nimport PeopleItem from '../components/PeopleItem';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nclass Peoples extends React.Component {\r\n    state = {\r\n        peoples: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        // for all api page\r\n        for(let page=1; page<10; page++){\r\n            const res = await axios.get(\"https://swapi.co/api/people/?page=\" + page);\r\n            this.setState(prevState => ({ \r\n                peoples: [...prevState.peoples, ...res.data.results] \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { peoples } = this.state;\r\n        return (\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                {peoples.length \r\n                ? peoples.map((people, index) => \r\n                    <PeopleItem\r\n                        key={index} \r\n                        name={people.name}\r\n                        id={index+1}\r\n                    /> ) \r\n                : <Spinner animation=\"grow\"/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Peoples;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nclass PlanetItem extends React.Component {\r\n    render() {\r\n        const {name} = this.props;\r\n        return(\r\n            <Card  \r\n                bg=\"dark\"\r\n                text=\"white\" \r\n                style={{margin: \"5px\", width: \"10rem\", height: \"10rem\", float: \"left\"}}\r\n            >\r\n                <Card.Body>\r\n                <Card.Title>{name}</Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlanetItem;","import React from 'react';\r\nimport PlanetItem from '../components/PlanetItem'\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nclass Planets extends React.Component {\r\n    state = {\r\n        planets: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        // for all api page\r\n        for(let page=1; page<8; page++){\r\n            const res = await axios.get(\"https://swapi.co/api/planets/?page=\" + page);\r\n            this.setState(prevState => ({ \r\n                //api format is res.data.results\r\n                planets: [...prevState.planets, ...res.data.results] \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { planets } = this.state;\r\n        return (\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                {planets.length \r\n                ? planets.map((planet, index) => \r\n                    <PlanetItem\r\n                        key={index} \r\n                        name={planet.name}\r\n                    /> ) \r\n                : <Spinner animation=\"grow\"/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nclass StarshipItem extends React.Component {\r\n    render() {\r\n        const {name} = this.props;\r\n        return(\r\n            <Card  \r\n                bg=\"dark\"\r\n                text=\"white\" \r\n                style={{margin: \"5px\", width: \"10rem\", height: \"10rem\", float: \"left\"}}\r\n            >\r\n                <Card.Body>\r\n                <Card.Title>{name}</Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StarshipItem;","import React from 'react';\r\nimport StarshipItem from '../components/StarshipItem'\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nclass Starships extends React.Component {\r\n    state = {\r\n        starships: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const axios = require('axios');\r\n        // for all api page\r\n        for(let page=1; page<5; page++){\r\n            const res = await axios.get(\"https://swapi.co/api/starships/?page=\" + page);\r\n            this.setState(prevState => ({ \r\n                //api format is res.data.results\r\n                starships: [...prevState.starships, ...res.data.results] \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { starships } = this.state;\r\n        return (\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                {starships.length \r\n                ? starships.map((starship, index) => \r\n                    <StarshipItem\r\n                        key={index} \r\n                        name={starship.name}\r\n                    /> ) \r\n                : <Spinner animation=\"grow\"/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Starships;","import React  from 'react';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport { Container, Col } from 'react-bootstrap';\r\n\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Movies from './pages/Movies';\r\nimport MovieDetails from './pages/MovieDetails';\r\nimport Peoples from './pages/Peoples';\r\nimport Planets from './pages/Planets';\r\nimport Starships from './pages/Starships';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <HashRouter>\r\n                    <Col>\r\n                        <Header />\r\n                    </Col>\r\n                    <Col>\r\n                        <Route component={Home} exact path={\"/\"} />\r\n                        <Route component={Movies} path={\"/movies\"} />\r\n                        <Route component={MovieDetails} path={\"/movie/:id\"} /> \r\n                        <Route component={Peoples} path={\"/peoples\"} />                                    \r\n                        <Route component={Planets} path={\"/planets\"} />                          \r\n                        <Route component={Starships} path={\"/starships\"} />                          \r\n                    </Col>\r\n                </HashRouter>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}